{"version":3,"sources":["../../src/onepay/OnePayInternational.js"],"names":["OnePayInternational","OnePay","getReturnUrlStatus","responseCode","locale","responseCodeTable","vn","en","B","E","F","Z","default","respondText","constructor","config","validateCheckoutPayload","payload","checkoutSchema","validate","checkoutPayloadDefaults","billingCity","billingCountry","billingPostCode","billingStateProvince","billingStreet","currency","CURRENCY_VND","deliveryAddress","deliveryCity","deliveryCountry","customerEmail","customerPhone","deliveryProvince","LOCALE_VN","title","customerId","vpcAccessCode","vpcCommand","COMMAND","vpcMerchant","vpcVersion","VERSION","verifyReturnUrl","query","then","verifyResults","returnObject","amount","parseInt","vpc_Amount","vpc_AVS_City","vpc_AVS_Country","vpc_AVS_PostCode","vpc_AVS_StateProv","vpc_AVS_Street01","card","vpc_Card","command","vpc_Command","currencyCode","gatewayTransactionNo","vpc_TransactionNo","vpc_Locale","merchant","vpc_Merchant","message","vpc_Message","orderId","vpc_OrderInfo","vpc_TxnResponseCode","secureHash","vpc_SecureHash","transactionId","vpc_MerchTxnRef","version","vpc_Version","Object","assign","SimpleSchema","againLink","type","String","max","regEx","urlRegExp","Integer","optional","clientIp","allowedValues","RegEx","Email","returnUrl","TEST_CONFIG","accessCode","paymentGateway","secureSecret"],"mappings":"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","file":"OnePayInternational.js","sourcesContent":["/* © 2018 NauStud.io\n * @author Thanh\n */\nimport SimpleSchema from 'simpl-schema';\nimport { OnePay } from './OnePay';\nimport { urlRegExp } from '../utils';\n\n/**\n * OnePay International payment gateway helper.\n * <br>\n * Supports Master Card, Visa.\n *\n * _Hàm hỗ trợ thanh toán qua OnePay Quốc Tế_\n * <br>\n * _Hỗ trợ thẻ Master và Visa_\n *\n *\n * @extends OnePay\n * @example\n * import { OnePayInternational } from 'vn-payments';\n *\n * const TEST_CONFIG = OnePayDomestic.TEST_CONFIG;\n *\n * const onepayCheckout = new OnePayInternational({\n * \taccessCode: TEST_CONFIG.accessCode,\n * \tmerchant: TEST_CONFIG.merchant,\n * \tpaymentGateway: TEST_CONFIG.paymentGateway,\n * \tsecureSecret: TEST_CONFIG.secureSecret,\n * });\n *\n * // checkoutUrl is an URL instance\n * const checkoutUrl = await onepayCheckout.buildCheckoutUrl(params);\n *\n * this.response.writeHead(301, { Location: checkoutUrl.href });\n * this.response.end();\n */\nclass OnePayInternational extends OnePay {\n\t/**\n\t *\n\t * @param {*} responseCode Responde code from gateway <br> _Mã trả về từ cổng thanh toán_\n\t * @param {*} locale Same locale at the buildCheckoutUrl. Note, 'vn' for Vietnamese <br> _Cùng nơi với hàm buildCheckoutUrl. Lưu ý, 'vn' là Việt Nam_\n\t * @return {string}  A string contains error status converted from response code <br> _Một chuỗi chứa trạng thái lỗi được chuyển lại từ response code_\n\t */\n\tstatic getReturnUrlStatus(responseCode, locale = 'vn') {\n\t\tconst responseCodeTable = {\n\t\t\t0: {\n\t\t\t\tvn: 'Giao dịch thành công',\n\t\t\t\ten: 'Transaction is successful',\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tvn: 'Ngân hàng phát hành thẻ không cấp phép. Vui lòng liên hệ ngân hàng',\n\t\t\t\ten: 'Issuer Bank declined the transaction. Please contact Issuer Bank',\n\t\t\t},\n\t\t\t2: {\n\t\t\t\tvn:\n\t\t\t\t\t'Ngân hàng phát hành từ chối cấp phép, do số dư không đủ thanh toán hoặc chưa đăng ký dịch vụ thanh toán trực tuyến',\n\t\t\t\ten: 'Bank Declined Transaction',\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tvn: 'Cổng thanh toán không nhận được kết quả trả về từ ngân hàng phát hành thẻ',\n\t\t\t\ten: 'Issuer Bank declined the transaction',\n\t\t\t},\n\t\t\t4: {\n\t\t\t\tvn: 'Thẻ hết hạn sử dụng',\n\t\t\t\ten: 'Your card is expired',\n\t\t\t},\n\t\t\t5: {\n\t\t\t\ten: 'Your credit account is insufficient funds',\n\t\t\t\tvn: 'Thẻ không đủ hạn mức hoặc tài khoản không đủ số dư thanh toán.',\n\t\t\t},\n\t\t\t6: {\n\t\t\t\ten: 'Error from Issuer Bank.',\n\t\t\t\tvn: 'Lỗi từ ngân hàng phát hành thẻ.',\n\t\t\t},\n\t\t\t7: {\n\t\t\t\ten: 'Error when processing transaction',\n\t\t\t\tvn: 'Lỗi phát sinh trong quá trình xử lý giao dịch',\n\t\t\t},\n\t\t\t8: {\n\t\t\t\ten: 'Issuer Bank does not support E-commerce transaction',\n\t\t\t\tvn: 'Ngân hàng phát hành thẻ không hỗ trợ giao dịch Internet',\n\t\t\t},\n\t\t\t9: {\n\t\t\t\ten: 'Issuer Bank declined the transaction. Please contact Issuer Bank.',\n\t\t\t\tvn: 'Ngân hàng phát hành thẻ từ chối giao dịch.',\n\t\t\t},\n\t\t\t99: {\n\t\t\t\ten: 'User cancel',\n\t\t\t\tvn: 'Người dùng hủy giao dịch',\n\t\t\t},\n\t\t\tB: {\n\t\t\t\ten: 'Cannot authenticated by 3D-Secure Program. Please contact Issuer Bank.',\n\t\t\t\tvn: 'Không xác thực được 3D- Secure. Liên hệ ngân hàng phát hành để được hỗ trợ.',\n\t\t\t},\n\t\t\tE: {\n\t\t\t\ten: 'Wrong CSC entered or Issuer Bank declined the transaction. Please contact Issuer Bank.',\n\t\t\t\tvn: 'Bạn nhập sai CSC hoặc thẻ vượt quá hạn mức lần thanh toán',\n\t\t\t},\n\t\t\tF: {\n\t\t\t\ten: '3D Secure Authentication Failed',\n\t\t\t\tvn: 'Giao dịch thất bại. Không xác thực được 3D',\n\t\t\t},\n\t\t\tZ: {\n\t\t\t\ten: 'Transaction was block by OFD',\n\t\t\t\tvn: 'Giao dịch bị chặn bởi hệ thống ODF',\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\tvn: 'Giao dịch thất bại',\n\t\t\t\ten: 'Unknown Failure',\n\t\t\t},\n\t\t};\n\n\t\tconst respondText = responseCodeTable[responseCode];\n\n\t\treturn respondText ? respondText[locale] : responseCodeTable.default[locale];\n\t}\n\n\t/**\n\t * Instantiate a OnePayInternational checkout helper\n\t *<br>\n\t * _Khởi tạo hàm thanh toán OnePayInternational_\n\t * @param  {Object} config check OnePay.configSchema for data type requirements. <br> _Xem OnePay.configSchema để biết yêu cầu kiểu dữ liệu_\n\t * @return {void}\n\t */\n\tconstructor(config = {}) {\n\t\tsuper(config, 'international');\n\t}\n\n\t/**\n\t * Validate checkout payload against specific schema. Throw ValidationErrors if invalid against checkoutSchema.\n\t *\n\t * _Kiểm tra tính hợp lệ của dữ liệu thanh toán dựa trên schema đã được đồng bộ với tài liệu của nhà cung cấp.\n\t * Hiển thị lỗi nếu không hợp lệ với checkoutSchema._\n\t * @param {OnePayCheckoutPayload} payload\n\t * @override\n\t */\n\tvalidateCheckoutPayload(payload) {\n\t\tOnePayInternational.checkoutSchema.validate(payload);\n\t}\n\n\t/**\n\t * Return default checkout Payloads\n\t *\n\t * _Lấy checkout payload mặc định cho cổng thanh toán này_\n\t * @return {OnePayCheckoutPayload} default payload object <br> _Dữ liệu mặc định của đối tượng_\n\t */\n\tget checkoutPayloadDefaults() {\n\t\t/* prettier-ignore */\n\t\treturn {\n\t\t\tbillingCity: '',\n\t\t\tbillingCountry: '',\n\t\t\tbillingPostCode: '',\n\t\t\tbillingStateProvince: '',\n\t\t\tbillingStreet: '',\n\t\t\tcurrency: OnePay.CURRENCY_VND,\n\t\t\tdeliveryAddress: '',\n\t\t\tdeliveryCity: '',\n\t\t\tdeliveryCountry: '',\n\t\t\tcustomerEmail: null, // do not use '' since it will be validated with Email RegExp\n\t\t\tcustomerPhone: '',\n\t\t\tdeliveryProvince: '',\n\t\t\tlocale: OnePay.LOCALE_VN,\n\t\t\ttitle: 'VPC 3-Party',\n\t\t\tcustomerId: '',\n\t\t\tvpcAccessCode: '',\n\t\t\tvpcCommand: OnePay.COMMAND,\n\t\t\tvpcMerchant: '',\n\t\t\tvpcVersion: OnePay.VERSION,\n\t\t};\n\t}\n\t/**\n\t * @typedef {Object} OnePayInternationalReturnObject\n\t * @property {boolean} isSuccess whether the payment succeeded or not\n\t * @property {number} amount amount paid by customer, already divided by 100\n\t * @property {string} command should be same with checkout request\n\t * @property {string} billingCity billing address' city\n\t * @property {string} billingCountry  billing address' country\n\t * @property {string} billingPostCode billing address' post code\n\t * @property {string} billingStateProvince billing address' state or province\n\t * @property {string} billingStreet billing address and street name\n\t * @property {string} card type of card used to pay, VC, MC, JC, AE\n\t * @property {string} currencyCode currency code, should be same with checkout request\n\t * @property {string} gatewayTransactionNo Gateway's own transaction ID, used to look up at Gateway's side\n\t * @property {string} locale locale code\n\t * @property {string} merchant merchant ID, should be same with checkout request\n\t * @property {string} message Approve or error message from gateway\n\t * @property {string} orderId merchant's order ID, should be same with checkout request\n\t * @property {string} responseCode response code, payment has errors if it is non-zero\n\t * @property {string} secureHash checksum of the returned data, used to verify data integrity\n\t * @property {string} transactionId merchant's transaction ID, should be same with checkout request\n\t * @property {string} version should be same with checkout request\n\t *\n\t * @property {string} vpc_3DSECI e.g: 06\n\t * @property {string} vpc_3DSenrolled e.g: N\n\t * @property {string} vpc_3DSXID e.g: zklRMXTS2puX%2Btj0DwOJyq6T6s8%3D\n\t * @property {string} vpc_AcqAVSRespCode e.g: Unsupported\n\t * @property {string} vpc_AcqCSCRespCode e.g: Unsupported\n\t * @property {string} vpc_AcqResponseCode e.g: 00\n\t * @property {string} vpc_Amount e.g: 200000\n\t * @property {string} vpc_AuthorizeId e.g: 523190\n\t * @property {string} vpc_AVS_City e.g: Hanoi\n\t * @property {string} vpc_AVS_Country e.g: VNM\n\t * @property {string} vpc_AVS_PostCode e.g: 10000\n\t * @property {string} vpc_AVS_StateProv e.g: Hoan+Kiem\n\t * @property {string} vpc_AVS_Street01 e.g: 194+Tran+Quang+Khai\n\t * @property {string} vpc_AVSRequestCode e.g: Z\n\t * @property {string} vpc_AVSResultCode e.g: Unsupported\n\t * @property {string} vpc_BatchNo e.g: 20180116\n\t * @property {string} vpc_Card e.g: VC\n\t * @property {string} vpc_CardLevelIndicator e.g: 88\n\t * @property {string} vpc_CardNum e.g: 400555xxxxxx0001\n\t * @property {string} vpc_Command e.g: pay\n\t * @property {string} vpc_CommercialCard e.g: U\n\t * @property {string} vpc_CommercialCardIndicator e.g: 3\n\t * @property {string} vpc_CSCResultCode e.g: Unsupported\n\t * @property {string} vpc_Locale e.g: en_VN\n\t * @property {string} vpc_MarketSpecificData e.g: 8\n\t * @property {string} vpc_Merchant e.g: TESTONEPAY\n\t * @property {string} vpc_MerchTxnRef e.g: TEST_1516078223875-387026611\n\t * @property {string} vpc_Message e.g: Approved\n\t * @property {string} vpc_OrderInfo e.g: TEST_1516078223875-387026611\n\t * @property {string} vpc_ReceiptNo e.g: 801615523190\n\t * @property {string} vpc_ReturnACI e.g: 8\n\t * @property {string} vpc_RiskOverallResult e.g: ACC\n\t * @property {string} vpc_SecureHash e.g: 0375408701C885CA396ED9A085D0E79B7D5437CD2FC021A96E3703787CC2874C\n\t * @property {string} vpc_TransactionIdentifier e.g: 1234567890123456789\n\t * @property {string} vpc_TransactionNo e.g: 62267\n\t * @property {string} vpc_TxnResponseCode e.g: 0\n\t * @property {string} vpc_VerSecurityLevel e.g: 06\n\t * @property {string} vpc_Version e.g: 2\n\t * @property {string} vpc_VerStatus e.g: E\n\t * @property {string} vpc_VerType e.g: 3DS\n\t */\n\t/**\n\t * Verify return query string from OnePay using enclosed vpc_SecureHash string\n\t * <br>\n\t * _Hàm thực hiện xác minh tính đúng đắn của các tham số trả về từ onepay Payment_\n\t *\n\t * @param {*} query\n\t * @returns { Promise<OnePayInternationalReturnObject> } Promise object which resolved with normalized returned data object, with additional fields like isSuccess. <br> _Promise khi hoàn thành sẽ trả về object data từ cổng thanh toán, được chuẩn hóa tên theo camelCase và đính kèm thuộc tính isSuccess_\n\t */\n\tverifyReturnUrl(query) {\n\t\treturn super.verifyReturnUrl(query).then(verifyResults => {\n\t\t\tconst returnObject = {\n\t\t\t\t// these are common normalized properties, others are kept as is\n\t\t\t\tamount: parseInt(query.vpc_Amount, 10) / 100,\n\t\t\t\tbillingCity: query.vpc_AVS_City,\n\t\t\t\tbillingCountry: query.vpc_AVS_Country,\n\t\t\t\tbillingPostCode: query.vpc_AVS_PostCode,\n\t\t\t\tbillingStateProvince: query.vpc_AVS_StateProv,\n\t\t\t\tbillingStreet: query.vpc_AVS_Street01,\n\t\t\t\tcard: query.vpc_Card,\n\t\t\t\tcommand: query.vpc_Command,\n\t\t\t\tcurrencyCode: 'VND', // no Currency Code return from OnePay, it is hardcoded\n\t\t\t\tgatewayTransactionNo: query.vpc_TransactionNo,\n\t\t\t\tlocale: query.vpc_Locale,\n\t\t\t\tmerchant: query.vpc_Merchant,\n\t\t\t\tmessage: query.vpc_Message,\n\t\t\t\torderId: query.vpc_OrderInfo,\n\t\t\t\tresponseCode: query.vpc_TxnResponseCode,\n\t\t\t\tsecureHash: query.vpc_SecureHash,\n\t\t\t\ttransactionId: query.vpc_MerchTxnRef,\n\t\t\t\tversion: query.vpc_Version,\n\t\t\t};\n\n\t\t\t// keep vpc_* fields from gateway\n\t\t\treturn Object.assign(returnObject, query, verifyResults);\n\t\t});\n\t}\n}\n\n//\n/**\n * The schema is based on field data requirements from OnePay's dev document\n *\n * @typedef {SimpleSchema} OnePayInternationalCheckoutSchema\n */\n/* prettier-ignore */\nOnePayInternational.checkoutSchema = new SimpleSchema({\n\tagainLink            : { type: String, max: 64, regEx: urlRegExp },\n\t// NOTE: there is an inconsistency in OnePayDom vs. Intl that we had to test to find out,\n\t// while intl allows 10 digits, domestic only allows max 9 digits (999.999.999VND)\n\tamount               : { type: SimpleSchema.Integer, max: 9999999999 },\n\tbillingCity          : { type: String, optional: true, max: 64 },\n\tbillingCountry       : { type: String, optional: true, max: 2 },\n\tbillingPostCode      : { type: String, optional: true, max: 64 },\n\tbillingStateProvince : { type: String, optional: true, max: 64 },\n\tbillingStreet        : { type: String, optional: true, max: 64 },\n\tclientIp             : { type: String, max: 15 },\n\tcurrency             : { type: String, allowedValues: ['VND'] },\n\tcustomerEmail        : { type: String, optional: true, max: 24, regEx: SimpleSchema.RegEx.Email },\n\tcustomerId           : { type: String, optional: true, max: 64 },\n\tcustomerPhone        : { type: String, optional: true, max: 16 },\n\tdeliveryAddress      : { type: String, optional: true, max: 64 },\n\tdeliveryCity         : { type: String, optional: true, max: 64 },\n\tdeliveryCountry      : { type: String, optional: true, max: 8 },\n\tdeliveryProvince     : { type: String, optional: true, max: 64 },\n\tlocale               : { type: String, allowedValues: ['vn', 'en'] },\n\torderId              : { type: String, max: 32 },\n\treturnUrl            : { type: String, max: 255, regEx: urlRegExp }, // NOTE: returnURL is documented with 64 chars limit but seem not a hard limit, and 64 is too few in some scenario\n\ttitle                : { type: String, optional: true, max: 255 }, // NOTE: no max limit documented for this field, this is just a safe value\n\ttransactionId        : { type: String, max: 34 },\n\tvpcAccessCode        : { type: String, max: 8 },\n\tvpcCommand           : { type: String, max: 16 },\n\tvpcMerchant          : { type: String, max: 16 },\n\tvpcVersion           : { type: String, max: 2 },\n});\n\n/**\n * OnePayInternational test config\n *\n * _Cấu hình dùng thử OnePayInternational_\n */\nOnePayInternational.TEST_CONFIG = {\n\taccessCode: '6BEB2546',\n\tmerchant: 'TESTONEPAY',\n\tpaymentGateway: 'https://mtf.onepay.vn/vpcpay/vpcpay.op',\n\tsecureSecret: '6D0870CDE5F24F34F3915FB0045120DB',\n};\n\nexport { OnePayInternational };\n"]}