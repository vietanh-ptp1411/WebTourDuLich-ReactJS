{"version":3,"sources":["../../src/onepay/OnePayDomestic.js"],"names":["OnePayDomestic","OnePay","getReturnUrlStatus","responseCode","locale","responseCodeTable","vn","en","default","respondText","constructor","config","validateCheckoutPayload","payload","checkoutSchema","validate","checkoutPayloadDefaults","billingCity","billingCountry","billingPostCode","billingStateProvince","billingStreet","currency","CURRENCY_VND","deliveryAddress","deliveryCity","deliveryCountry","customerEmail","customerPhone","deliveryProvince","LOCALE_VN","title","customerId","vpcAccessCode","vpcCommand","COMMAND","vpcMerchant","vpcVersion","VERSION","verifyReturnUrl","query","then","verifyResults","returnObject","amount","parseInt","vpc_Amount","command","vpc_Command","currencyCode","vpc_CurrencyCode","vpc_Locale","merchant","vpc_Merchant","message","vpc_TxnResponseCode","gatewayTransactionNo","vpc_TransactionNo","orderId","vpc_OrderInfo","secureHash","vpc_SecureHash","transactionId","vpc_MerchTxnRef","version","vpc_Version","Object","assign","SimpleSchema","againLink","type","String","optional","max","regEx","urlRegExp","Integer","clientIp","allowedValues","RegEx","Email","returnUrl","TEST_CONFIG","accessCode","paymentGateway","secureSecret"],"mappings":"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","file":"OnePayDomestic.js","sourcesContent":["/* © 2018 NauStud.io\n * @author Thanh\n */\nimport SimpleSchema from 'simpl-schema';\nimport { OnePay } from './OnePay';\nimport { urlRegExp } from '../utils';\n\n/**\n * OnePay Domestic payment gateway helper.\n * <br>\n * Supports VN domestic ATM cards\n *\n * _Hàm hỗ trợ cổng thanh toán nội địa OnePay_\n * <br>\n * _Hỗ trợ thẻ ATM nội địa_\n *\n * @extends OnePay\n *\n * @example\n * import { OnePayDomestic } from 'vn-payments';\n *\n * const TEST_CONFIG = OnePayDomestic.TEST_CONFIG;\n *\n * const onepayCheckout = new OnePayDomestic({\n * \taccessCode: TEST_CONFIG.accessCode,\n * \tmerchant: TEST_CONFIG.merchant,\n * \tpaymentGateway: TEST_CONFIG.paymentGateway,\n * \tsecureSecret: TEST_CONFIG.secureSecret,\n * });\n *\n * // checkoutUrl is an URL instance\n * const checkoutUrl = await onepayCheckout.buildCheckoutUrl(params);\n *\n * this.response.writeHead(301, { Location: checkoutUrl.href });\n * this.response.end();\n */\nclass OnePayDomestic extends OnePay {\n\t/**\n\t *\n\t * @param {*} responseCode Response code from gateway. <br> _Mã trả về từ cổng thanh toán._\n\t * @param {*} \tlocale Same locale at the buildCheckoutUrl. Note, 'vn' for Vietnamese. <br> _Cùng nơi với hàm buildCheckoutUrl. Lưu ý, Việt Nam là 'vn'_\n\t * @return {string}  A string contains error status converted from response code. <br> _Một chuỗi chứa trạng thái lỗi được chuyển lại từ response code_\n\t */\n\tstatic getReturnUrlStatus(responseCode, locale = 'vn') {\n\t\tconst responseCodeTable = {\n\t\t\t0: {\n\t\t\t\tvn: 'Giao dịch thành công',\n\t\t\t\ten: 'Approved',\n\t\t\t},\n\t\t\t1: {\n\t\t\t\tvn: 'Ngân hàng từ chối giao dịch',\n\t\t\t\ten: 'Bank Declined',\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tvn: 'Mã đơn vị không tồn tại',\n\t\t\t\ten: 'Merchant not exist',\n\t\t\t},\n\t\t\t4: {\n\t\t\t\tvn: 'Không đúng access code',\n\t\t\t\ten: 'Invalid access code',\n\t\t\t},\n\t\t\t5: {\n\t\t\t\tvn: 'Số tiền không hợp lệ',\n\t\t\t\ten: 'Invalid amount',\n\t\t\t},\n\t\t\t6: {\n\t\t\t\tvn: 'Mã tiền tệ không tồn tại',\n\t\t\t\ten: 'Invalid currency code',\n\t\t\t},\n\t\t\t7: {\n\t\t\t\tvn: 'Lỗi không xác định',\n\t\t\t\ten: 'Unspecified Failure ',\n\t\t\t},\n\t\t\t8: {\n\t\t\t\tvn: 'Số thẻ không đúng',\n\t\t\t\ten: 'Invalid card Number',\n\t\t\t},\n\t\t\t9: {\n\t\t\t\tvn: 'Tên chủ thẻ không đúng',\n\t\t\t\ten: 'Invalid card name',\n\t\t\t},\n\t\t\t10: {\n\t\t\t\tvn: 'Thẻ hết hạn/Thẻ bị khóa',\n\t\t\t\ten: 'Expired Card',\n\t\t\t},\n\t\t\t11: {\n\t\t\t\tvn: 'Thẻ chưa đăng ký sử dụng dịch vụ',\n\t\t\t\ten: 'Card Not Registed Service(internet banking)',\n\t\t\t},\n\t\t\t12: {\n\t\t\t\tvn: 'Ngày phát hành/Hết hạn không đúng',\n\t\t\t\ten: 'Invalid card date',\n\t\t\t},\n\t\t\t13: {\n\t\t\t\tvn: 'Vượt quá hạn mức thanh toán',\n\t\t\t\ten: 'Exist Amount',\n\t\t\t},\n\t\t\t21: {\n\t\t\t\tvn: 'Số tiền không đủ để thanh toán',\n\t\t\t\ten: 'Insufficient fund',\n\t\t\t},\n\t\t\t22: {\n\t\t\t\tvn: 'Thông tin tài khoản không đúng',\n\t\t\t\ten: 'Invalid Account',\n\t\t\t},\n\t\t\t23: {\n\t\t\t\tvn: 'Tài khoản bị khóa',\n\t\t\t\ten: 'Account Locked',\n\t\t\t},\n\t\t\t24: {\n\t\t\t\tvn: 'Thông tin thẻ không đúng',\n\t\t\t\ten: 'Invalid Card Info',\n\t\t\t},\n\t\t\t25: {\n\t\t\t\tvn: 'OTP không đúng',\n\t\t\t\ten: 'Invalid OTP',\n\t\t\t},\n\t\t\t253: {\n\t\t\t\tvn: 'Quá thời gian thanh toán',\n\t\t\t\ten: 'Transaction timeout',\n\t\t\t},\n\t\t\t99: {\n\t\t\t\tvn: 'Người sử dụng hủy giao dịch',\n\t\t\t\ten: 'User cancel',\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\tvn: 'Giao dịch thất bại',\n\t\t\t\ten: 'Unknown Failure',\n\t\t\t},\n\t\t};\n\n\t\tconst respondText = responseCodeTable[responseCode];\n\n\t\treturn respondText ? respondText[locale] : responseCodeTable.default[locale];\n\t}\n\n\t/**\n\t * Instantiate a OnePayDomestic checkout helper\n\t * <br>\n\t * _Khởi tạo hàm thanh toán OnePayDomestic_\n\t * @param  {Object} config check OnePay.configSchema for data type requirements. <br> _Xem OnePay.configSchema để biết yêu cầu kiểu dữ liệu_\n\t * @return {void}\n\t */\n\tconstructor(config = {}) {\n\t\tsuper(config, 'domestic');\n\t}\n\n\t/**\n\t * Validate checkout payload against specific schema. Throw ValidationErrors if invalid against checkoutSchema.\n\t *\n\t * _Kiểm tra tính hợp lệ của dữ liệu thanh toán dựa trên schema đã được đồng bộ với tài liệu của nhà cung cấp.\n\t * Hiển thị lỗi nếu không hợp lệ với checkoutSchema._\n\t * @param {OnePayCheckoutPayload} payload\n\t * @override\n\t */\n\tvalidateCheckoutPayload(payload) {\n\t\tOnePayDomestic.checkoutSchema.validate(payload);\n\t}\n\n\t/**\n\t * Return default checkout Payloads\n\t *\n\t * _Lấy checkout payload mặc định cho cổng thanh toán này_\n\t * @return {OnePayCheckoutPayload} default payload object <br> _Dữ liệu mặc định của đối tượng_\n\t */\n\tget checkoutPayloadDefaults() {\n\t\t/* prettier-ignore */\n\t\treturn {\n\t\t\tbillingCity: '',\n\t\t\tbillingCountry: '',\n\t\t\tbillingPostCode: '',\n\t\t\tbillingStateProvince: '',\n\t\t\tbillingStreet: '',\n\t\t\tcurrency: OnePay.CURRENCY_VND,\n\t\t\tdeliveryAddress: '',\n\t\t\tdeliveryCity: '',\n\t\t\tdeliveryCountry: '',\n\t\t\tcustomerEmail: null, // do not use '' since it will be validated with Email RegExp\n\t\t\tcustomerPhone: '',\n\t\t\tdeliveryProvince: '',\n\t\t\tlocale: OnePay.LOCALE_VN,\n\t\t\ttitle: 'VPC 3-Party',\n\t\t\tcustomerId: '',\n\t\t\tvpcAccessCode: '',\n\t\t\tvpcCommand: OnePay.COMMAND,\n\t\t\tvpcMerchant: '',\n\t\t\tvpcVersion: OnePay.VERSION,\n\t\t};\n\t}\n\t/**\n\t *\n\t * @typedef {Object} OnePayDomesticReturnObject\n\t * @property {boolean} isSuccess whether the payment succeeded or not\n\t * @property {number} amount amount paid by customer, already divided by 100\n\t * @property {string} command should be same with checkout request\n\t * @property {string} currencyCode currency code, should be same with checkout request\n\t * @property {string} gatewayTransactionNo Gateway's own transaction ID, used to look up at Gateway's side\n\t * @property {string} locale locale code, should be same with checkout request\n\t * @property {string} merchant merchant ID, should be same with checkout request\n\t * @property {string} message Approve or error message based on response code\n\t * @property {string} orderId merchant's order ID, should be same with checkout request\n\t * @property {string} responseCode response code, payment has errors if it is non-zero\n\t * @property {string} secureHash checksum of the returned data, used to verify data integrity\n\t * @property {string} transactionId merchant's transaction ID, should be same with checkout request\n\t * @property {string} version should be same with checkout request\n\t *\n\t * @property {string} vpc_AdditionData e.g: 970436\n\t * @property {string} vpc_Amount e.g: 1000000\n\t * @property {string} vpc_Command e.g: pay\n\t * @property {string} vpc_CurrencyCode e.g: VND\n\t * @property {string} vpc_Locale e.g: vn\n\t * @property {string} vpc_Merchant e.g: ONEPAY\n\t * @property {string} vpc_MerchTxnRef e.g: TEST_15160802610161733380665\n\t * @property {string} vpc_OrderInfo e.g: TEST_15160802610161733380665\n\t * @property {string} vpc_SecureHash e.g: B5CD330E2DC1B1C116A068366F69717F54AD77E1BE0C40E4E3700551BE9D5004\n\t * @property {string} vpc_TransactionNo e.g: 1618136\n\t * @property {string} vpc_TxnResponseCode e.g: 0\n\t * @property {string} vpc_Version e.g: 2\n\t */\n\t/**\n\t * Verify return query string from OnePay using enclosed vpc_SecureHash string\n\t *\n\t * _Hàm thực hiện xác minh tính đúng đắn của các tham số trả về từ onepay Payment_\n\t *\n\t * @param {*} query Query data object from GET handler (`response.query`). <br> _Object query trả về từ GET handler_\n\t * @returns { Promise<OnePayDomesticReturnObject> } Promise object which resolved with normalized returned data object, with additional fields like isSuccess. <br> _Promise khi hoàn thành sẽ trả về object data từ cổng thanh toán, được chuẩn hóa tên theo camelCase và đính kèm thuộc tính isSuccess_\n\t */\n\tverifyReturnUrl(query) {\n\t\treturn super.verifyReturnUrl(query).then(verifyResults => {\n\t\t\tconst returnObject = {\n\t\t\t\tamount: parseInt(query.vpc_Amount, 10) / 100,\n\t\t\t\tcommand: query.vpc_Command,\n\t\t\t\tcurrencyCode: query.vpc_CurrencyCode,\n\t\t\t\tlocale: query.vpc_Locale,\n\t\t\t\tmerchant: query.vpc_Merchant,\n\t\t\t\tmessage: OnePayDomestic.getReturnUrlStatus(query.vpc_TxnResponseCode, query.vpc_Locale), // no message from gateway, we'll look it up on our side\n\t\t\t\tgatewayTransactionNo: query.vpc_TransactionNo,\n\t\t\t\torderId: query.vpc_OrderInfo,\n\t\t\t\tresponseCode: query.vpc_TxnResponseCode,\n\t\t\t\tsecureHash: query.vpc_SecureHash,\n\t\t\t\ttransactionId: query.vpc_MerchTxnRef,\n\t\t\t\tversion: query.vpc_Version,\n\t\t\t};\n\n\t\t\t// keep vpc_* fields from gateway\n\t\t\treturn Object.assign(returnObject, query, verifyResults);\n\t\t});\n\t}\n}\n\n/* prettier-ignore */\n/**\n * The schema is based on field data requirements from OnePay's dev document\n * <br>\n * _Cấu trúc dữ liệu được dựa trên các yêu cầu của tài liệu OnePay_\n * @type {SimpleSchema}\n */\nOnePayDomestic.checkoutSchema = new SimpleSchema({\n\tagainLink            : { type: String, optional: true, max: 64, regEx: urlRegExp },\n\t// NOTE: there is an inconsistency in OnePayDom vs. Intl that we had to test to find out,\n\t// while intl allows 10 digits, domestic only allows max 9 digits (999.999.999VND)\n\tamount               : { type: SimpleSchema.Integer, max: 9999999999 },\n\t// NOTE: billing address is not expected in domestic but keep them here so that\n\t// same input data can be used for both dom. and intl. gateway\n\tbillingCity          : { type: String, optional: true, max: 64 },\n\tbillingCountry       : { type: String, optional: true, max: 2 },\n\tbillingPostCode      : { type: String, optional: true, max: 64 },\n\tbillingStateProvince : { type: String, optional: true, max: 64 },\n\tbillingStreet        : { type: String, optional: true, max: 64 },\n\tclientIp             : { type: String, max: 15 },\n\tcurrency             : { type: String, allowedValues: ['VND'] },\n\tcustomerEmail        : { type: String, optional: true, max: 24, regEx: SimpleSchema.RegEx.Email },\n\tcustomerId           : { type: String, optional: true, max: 64 },\n\tcustomerPhone        : { type: String, optional: true, max: 16 },\n\tdeliveryAddress      : { type: String, optional: true, max: 64 },\n\tdeliveryCity         : { type: String, optional: true, max: 64 },\n\tdeliveryCountry      : { type: String, optional: true, max: 8 },\n\tdeliveryProvince     : { type: String, optional: true, max: 64 },\n\tlocale               : { type: String, allowedValues: ['vn', 'en'] },\n\torderId              : { type: String, max: 32 },\n\treturnUrl            : { type: String, max: 255, regEx: urlRegExp }, // NOTE: returnURL is documented with 64 chars limit but seem not a hard limit, and 64 is too few in some scenario\n\ttitle                : { type: String, optional: true, max: 255 }, // NOTE: no max limit documented for this field, this is just a safe value\n\ttransactionId        : { type: String, max: 34 },\n\tvpcAccessCode        : { type: String, max: 8 },\n\tvpcCommand           : { type: String, max: 16 },\n\tvpcMerchant          : { type: String, max: 16 },\n\tvpcVersion           : { type: String, max: 2 },\n});\n\n/**\n * OnePayDomestic test configs\n *\n * _Cấu hình dùng thử OnePay Domestic._\n */\nOnePayDomestic.TEST_CONFIG = {\n\taccessCode: 'D67342C2',\n\tmerchant: 'ONEPAY',\n\tpaymentGateway: 'https://mtf.onepay.vn/onecomm-pay/vpc.op',\n\tsecureSecret: 'A3EFDFABA8653DF2342E8DAC29B51AF0',\n};\n\nexport { OnePayDomestic };\n"]}