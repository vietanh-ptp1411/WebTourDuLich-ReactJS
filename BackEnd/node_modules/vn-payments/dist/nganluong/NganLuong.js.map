{"version":3,"sources":["../../src/nganluong/NganLuong.js"],"names":["NganLuong","constructor","config","Object","assign","configSchema","validate","buildCheckoutUrl","payload","Promise","resolve","reject","data","checkoutPayloadDefaults","nganluongSecretKey","secureSecret","nganluongMerchant","merchant","receiverEmail","validateCheckoutPayload","error","message","arrParam","function","nganluongCommand","cur_code","currency","toLowerCase","version","nganluongVersion","merchant_id","receiver_email","merchant_password","order_code","orderId","total_amount","String","amount","payment_method","paymentMethod","bank_code","bankCode","payment_type","paymentType","order_description","orderInfo","tax_amount","taxAmount","fee_shipping","feeShipping","discount_amount","discountAmount","return_url","returnUrl","cancel_url","cancelUrl","buyer_fullname","customerName","buyer_email","customerEmail","buyer_mobile","customerPhone","buyer_address","billingStreet","time_limit","timeLimit","lang_code","locale","affiliate_code","affiliateCode","total_item","totalItem","url","paymentGateway","params","keys","forEach","key","value","length","push","encodeURI","options","method","join","then","rs","text","err","result","objectResponse","error_code","href","checkout_url","Error","description","checkoutSchema","CURRENCY_VND","LOCALE_VN","VERSION","COMMAND","verifyReturnUrl","query","token","token_nl","isSuccess","encodeURIComponent","returnObject","_mapQueryToObject","getReturnUrlStatus","transactionId","responseCode","transaction_status","gatewayTransactionNo","transaction_id","responseCodeTable","vn","en","default","respondText","SimpleSchema","createdDate","type","optional","Integer","clientIp","max","allowedValues","billingCity","billingCountry","billingPostCode","billingStateProvince","customerId","deliveryAddress","deliveryCity","deliveryCountry","deliveryProvince","regEx","RegEx","Email","custom","shouldBeRequired","field","indexOf","ErrorTypes","REQUIRED","undefined","Url","LOCALE_EN","TEST_CONFIG"],"mappings":"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","file":"NganLuong.js","sourcesContent":["/* © 2018 NauStud.io\n * @author Eric Tran\n */\n\nimport SimpleSchema from 'simpl-schema';\nimport fetch from 'node-fetch';\nimport { parseString } from 'xml2js';\nimport { createMd5Hash } from '../utils';\n\n/**\n * NganLuong payment gateway helper\n * <br>\n * _Hàm hỗ trợ thanh toán qua Ngân Lượng_\n *\n * @example\n * import { NganLuong } from 'vn-payments';\n *\n * const TEST_CONFIG = NganLuong.TEST_CONFIG;\n *\n * const nganluongCheckout = new NganLuong({\n * \tpaymentGateway: TEST_CONFIG.paymentGateway,\n * \tmerchant: TEST_CONFIG.merchant,\n *  receiverEmail: TEST_CONFIG.receiverEmail,\n * \tsecureSecret: TEST_CONFIG.secureSecret,\n * });\n *\n * // checkoutUrl is an URL instance\n * const checkoutUrl = await nganluongCheckout.buildCheckoutUrl(params);\n *\n * this.response.writeHead(301, { Location: checkoutUrl.href });\n * this.response.end();\n */\nclass NganLuong {\n\t/**\n\t * Instantiate a NganLuong checkout helper\n\t * <br>\n\t * _Khởi tạo hàm thanh toán NganLuong_\n\t *\n\t * @param  {Object} config check NganLuong.configSchema for data type requirements <br> _Xem NganLuong.configSchema để biết yêu cầu kiểu dữ liệu_\n\t * @return {void}\n\t */\n\tconstructor(config) {\n\t\tthis.config = Object.assign({}, config);\n\t\t// check type validity\n\t\tNganLuong.configSchema.validate(this.config);\n\t}\n\n\t/**\n\t * Build checkoutUrl to redirect to the payment gateway\n\t * <br>\n\t * _Hàm xây dựng url để redirect qua NganLuong gateway, trong đó có tham số mã hóa (còn gọi là public key)_\n\t *\n\t * @param  {NganLuongCheckoutPayload} payload Object that contains needed data for the URL builder, refer to typeCheck object above <br> _Đối tượng chứa các dữ liệu cần thiết để thiết lập đường dẫn._\n\t * @return {Promise<URL>} buildCheckoutUrl promise\n\t */\n\tbuildCheckoutUrl(payload) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Mảng các tham số chuyển tới NganLuong Payment\n\t\t\tconst data = Object.assign({}, this.checkoutPayloadDefaults, payload);\n\t\t\tconst config = this.config;\n\n\t\t\tdata.nganluongSecretKey = config.secureSecret;\n\t\t\tdata.nganluongMerchant = config.merchant;\n\t\t\tdata.receiverEmail = config.receiverEmail;\n\n\t\t\t// Input type checking\n\t\t\ttry {\n\t\t\t\tthis.validateCheckoutPayload(data);\n\t\t\t} catch (error) {\n\t\t\t\treject(error.message);\n\t\t\t}\n\n\t\t\t// Step 1: Map data to ngan luong checkout params\n\t\t\t/* prettier-ignore */\n\t\t\tconst arrParam = {\n\t\t\t\tfunction               : data.nganluongCommand,\n\t\t\t\tcur_code               : data.currency ? data.currency.toLowerCase() : 'vnd',\n\t\t\t\tversion                : data.nganluongVersion,\n\t\t\t\tmerchant_id            : data.nganluongMerchant,\n\t\t\t\treceiver_email         : data.receiverEmail,\n\t\t\t\tmerchant_password      : createMd5Hash(data.nganluongSecretKey),\n\t\t\t\torder_code             : data.orderId,\n\t\t\t\ttotal_amount           : String(data.amount),\n\t\t\t\tpayment_method         : data.paymentMethod,\n\t\t\t\tbank_code              : data.bankCode,\n\t\t\t\tpayment_type           : data.paymentType,\n\t\t\t\torder_description      : data.orderInfo,\n\t\t\t\ttax_amount             : data.taxAmount,\n\t\t\t\tfee_shipping           : data.feeShipping || '0',\n\t\t\t\tdiscount_amount        : data.discountAmount || '0',\n\t\t\t\treturn_url             : data.returnUrl,\n\t\t\t\tcancel_url             : data.cancelUrl,\n\t\t\t\tbuyer_fullname         : data.customerName,\n\t\t\t\tbuyer_email            : data.customerEmail,\n\t\t\t\tbuyer_mobile           : data.customerPhone,\n\t\t\t\tbuyer_address          : data.billingStreet,\n\t\t\t\ttime_limit             : data.timeLimit,\n\t\t\t\tlang_code              : data.locale,\n\t\t\t\taffiliate_code         : data.affiliateCode,\n\t\t\t\ttotal_item             : data.totalItem,\n\t\t\t};\n\n\t\t\t// Step 2: Post checkout data to ngan luong server\n\t\t\tconst url = config.paymentGateway;\n\t\t\tconst params = [];\n\t\t\tObject.keys(arrParam).forEach(key => {\n\t\t\t\tconst value = arrParam[key];\n\n\t\t\t\tif (value == null || value.length === 0) {\n\t\t\t\t\t// skip empty params (but they must be optional)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (value.length > 0) {\n\t\t\t\t\tparams.push(`${key}=${encodeURI(value)}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst options = {\n\t\t\t\tmethod: 'POST',\n\t\t\t};\n\n\t\t\tfetch(`${url}?${params.join('&')}`, options)\n\t\t\t\t.then(rs => rs.text())\n\t\t\t\t.then(rs => {\n\t\t\t\t\tparseString(rs, (err, result) => {\n\t\t\t\t\t\tconst objectResponse = result.result || {};\n\t\t\t\t\t\tif (objectResponse.error_code[0] === '00') {\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\thref: objectResponse.checkout_url[0],\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(objectResponse.description[0]));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Validate checkout payload against specific schema. Throw ValidationErrors if invalid against checkoutSchema\n\t * <br>\n\t * _Kiểm tra tính hợp lệ của dữ liệu thanh toán dựa trên một cấu trúc dữ liệu cụ thể. Hiển thị lỗi nếu không hợp lệ với checkoutSchema._\n\t *\n\t * @param {NganLuongCheckoutPayload} payload\n\t */\n\tvalidateCheckoutPayload(payload) {\n\t\tNganLuong.checkoutSchema.validate(payload);\n\t}\n\n\t/**\n\t * Return default checkout Payloads\n\t *\n\t * _Lấy checkout payload mặc định cho cổng thanh toán này_\n\t * @return {NganLuongCheckoutPayload} default payload object <br> _Dữ liệu mặc định của đối tượng_\n\t */\n\tget checkoutPayloadDefaults() {\n\t\t/* prettier-ignore */\n\t\treturn {\n\t\t\tcurrency             : NganLuong.CURRENCY_VND,\n\t\t\tlocale               : NganLuong.LOCALE_VN,\n\t\t\tnganluongVersion     : NganLuong.VERSION,\n\t\t\tnganluongCommand\t : NganLuong.COMMAND,\n\t\t};\n\t}\n\n\t/**\n\t * @typedef {Object} NganLuongReturnObject\n\t * @property {boolean} isSuccess whether the payment succeeded or not\n\t * @property {string} message Approve or error message based on response code\n\t * @property {string} merchant merchant ID, should be same with checkout request\n\t * @property {string} transactionId merchant's transaction ID, should be same with checkout request\n\t * @property {string} amount amount paid by customer\n\t * @property {string} orderInfo order info, should be same with checkout request\n\t * @property {string} responseCode response code, payment has errors if it is non-zero\n\t * @property {string} bankCode bank code of the bank where payment was occurred\n\t * @property {string} gatewayTransactionNo Gateway's own transaction ID, used to look up at Gateway's side\n\t *\n\t * @property {string} error_code e.g: '00'\n\t * @property {string} token e.g: '43614-fc2a3698ee92604d5000434ed129d6a8'\n\t * @property {string} description e.g: ''\n\t * @property {string} transaction_status e.g: '00'\n\t * @property {string} receiver_email e.g: 'tung.tran@naustud.io'\n\t * @property {string} order_code e.g: 'adidas'\n\t * @property {string} total_amount e.g: '90000'\n\t * @property {string} payment_method e.g: 'ATM_ONLINE'\n\t * @property {string} bank_code e.g: 'BAB'\n\t * @property {string} payment_type e.g: '2'\n\t * @property {string} order_description e.g: 'Test'\n\t * @property {string} tax_amount e.g: '0'\n\t * @property {string} discount_amount e.g: '0'\n\t * @property {string} fee_shipping e.g: '0'\n\t * @property {string} return_url e.g: 'http%3A%2F%2Flocalhost%3A8080%2Fpayment%2Fnganluong%2Fcallback'\n\t * @property {string} cancel_url e.g: 'http%3A%2F%2Flocalhost%3A8080%2F'\n\t * @property {string} buyer_fullname e.g: 'Nguyen Hue'\n\t * @property {string} buyer_email e.g: 'tu.nguyen@naustud.io'\n\t * @property {string} buyer_mobile e.g: '0948231723'\n\t * @property {string} buyer_address e.g: 'TEst'\n\t * @property {string} affiliate_code e.g: ''\n\t * @property {string} transaction_id e.g: '19563733'\n\t */\n\t/**\n\t * Verify return query string from NganLuong using enclosed vnp_SecureHash string\n\t *<br>\n\t * _Hàm thực hiện xác minh tính đúng đắn của các tham số trả về từ nganluong Payment_\n\t *\n\t * @param  {Object} query Query data object from GET handler (`response.query`) <br> _Dữ liệu được trả về từ GET handler (`response.query`)_\n\t * @return {Promise<NganLuongReturnObject>} Promise object which resolved with normalized returned data object, with additional fields like isSuccess. <br> _Promise khi hoàn thành sẽ trả về object data từ cổng thanh toán, được chuẩn hóa tên theo camelCase và đính kèm thuộc tính isSuccess_\n\t */\n\tverifyReturnUrl(query) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst data = {};\n\t\t\tconst config = this.config;\n\t\t\tconst token = query.token || query.token_nl;\n\t\t\tif (!token) {\n\t\t\t\tresolve({\n\t\t\t\t\tisSuccess: false,\n\t\t\t\t\tmessage: 'No token found',\n\t\t\t\t});\n\t\t\t}\n\t\t\tdata.nganluongSecretKey = config.secureSecret;\n\t\t\tdata.nganluongMerchant = config.merchant;\n\t\t\tdata.receiverEmail = config.receiverEmail;\n\n\t\t\t// Step 1: Map data to ngan luong get detail params\n\t\t\t/* prettier-ignore */\n\t\t\tconst arrParam = {\n\t\t\t\tmerchant_id            : data.nganluongMerchant,\n\t\t\t\tmerchant_password      : createMd5Hash(data.nganluongSecretKey),\n\t\t\t\tversion                : data.nganluongVersion,\n\t\t\t\tfunction               : 'GetTransactionDetail',\n\t\t\t\ttoken,\n\t\t\t};\n\n\t\t\t// Step 2: Post checkout data to ngan luong server\n\t\t\tconst url = config.paymentGateway;\n\t\t\tconst params = [];\n\t\t\tObject.keys(arrParam).forEach(key => {\n\t\t\t\tconst value = arrParam[key];\n\n\t\t\t\tif (value == null || value.length === 0) {\n\t\t\t\t\t// skip empty params (but they must be optional)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (value.length > 0) {\n\t\t\t\t\tparams.push(`${key}=${encodeURIComponent(value)}`);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconst options = {\n\t\t\t\tmethod: 'POST',\n\t\t\t};\n\n\t\t\tfetch(`${url}?${params.join('&')}`, options)\n\t\t\t\t.then(rs => rs.text())\n\t\t\t\t.then(rs => {\n\t\t\t\t\tparseString(rs, (err, result) => {\n\t\t\t\t\t\tconst objectResponse = result.result || {};\n\t\t\t\t\t\tif (objectResponse.error_code[0] === '00') {\n\t\t\t\t\t\t\tobjectResponse.merchant = data.nganluongMerchant;\n\t\t\t\t\t\t\tconst returnObject = this._mapQueryToObject(objectResponse);\n\t\t\t\t\t\t\tresolve(Object.assign({}, returnObject, { isSuccess: true }));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tisSuccess: false,\n\t\t\t\t\t\t\t\tmessage: objectResponse.description || NganLuong.getReturnUrlStatus(objectResponse.error_code[0]),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t});\n\t}\n\n\t_mapQueryToObject(query) {\n\t\tconst returnObject = {};\n\t\tObject.keys(query).forEach(key => {\n\t\t\treturnObject[key] = query[key][0];\n\t\t});\n\n\t\treturn Object.assign({}, returnObject, {\n\t\t\tmerchant: returnObject.merchant,\n\t\t\ttransactionId: returnObject.order_code,\n\t\t\tamount: returnObject.total_amount,\n\t\t\torderInfo: returnObject.order_description,\n\t\t\tresponseCode: returnObject.transaction_status,\n\t\t\tbankCode: returnObject.bank_code,\n\t\t\tgatewayTransactionNo: returnObject.transaction_id,\n\t\t\tmessage: returnObject.description || NganLuong.getReturnUrlStatus(returnObject.error_code),\n\t\t\tcustomerEmail: returnObject.buyer_email,\n\t\t\tcustomerPhone: returnObject.buyer_mobile,\n\t\t\tcustomerName: returnObject.buyer_fullname,\n\t\t});\n\t}\n\n\t/**\n\t * Get known response code status\n\t * <br>\n\t * _Lấy chuỗi trạng thái từ response code đã biết_\n\t * @param  {string} responseCode Response code from gateway <br> _Mã trả về từ cổng thanh toán_\n\t * @param  {string} locale       Same locale at the buildCheckoutUrl. Note, 'vn' for Vietnamese <br> _Cùng nơi với hàm buildCheckoutUrl. Lưu ý, 'vn' là Việt Nam_\n\t * @return {string}              A string contains error status converted from response code <br> _Một chuỗi chứa trạng thái lỗi được chuyển lại từ response code_\n\t */\n\tstatic getReturnUrlStatus(responseCode, locale = 'vn') {\n\t\tconst responseCodeTable = {\n\t\t\t'00': {\n\t\t\t\tvn: 'Giao dịch thành công',\n\t\t\t\ten: 'Approved',\n\t\t\t},\n\t\t\t'02': {\n\t\t\t\tvn: 'Địa chỉ IP của merchant gọi tới NganLuong.vn không được chấp nhận',\n\t\t\t\ten: 'Invalid IP Address',\n\t\t\t},\n\t\t\t'03': {\n\t\t\t\tvn: 'Sai tham số gửi tới NganLuong.vn (có tham số sai tên hoặc kiểu dữ liệu)',\n\t\t\t\ten: 'Sent data is not in the right format',\n\t\t\t},\n\t\t\t'04': {\n\t\t\t\tvn: 'Tên hàm API do merchant gọi tới không hợp lệ (không tồn tại)',\n\t\t\t\ten: 'API function name not found',\n\t\t\t},\n\t\t\t'05': {\n\t\t\t\tvn: 'Sai version của API',\n\t\t\t\ten: 'Wrong API version',\n\t\t\t},\n\t\t\t'06': {\n\t\t\t\tvn: 'Mã merchant không tồn tại hoặc chưa được kích hoạt',\n\t\t\t\ten: 'Merchant code not found or not activated yet',\n\t\t\t},\n\t\t\t'07': {\n\t\t\t\tvn: 'Sai mật khẩu của merchant',\n\t\t\t\ten: 'Wrong merchant password',\n\t\t\t},\n\t\t\t'08': {\n\t\t\t\tvn: 'Tài khoản người bán hàng không tồn tại',\n\t\t\t\ten: 'Seller account not found',\n\t\t\t},\n\t\t\t'09': {\n\t\t\t\tvn: 'Tài khoản người nhận tiền đang bị phong tỏa',\n\t\t\t\ten: 'Receiver account is frozen',\n\t\t\t},\n\t\t\t10: {\n\t\t\t\tvn: 'Hóa đơn thanh toán không hợp lệ',\n\t\t\t\ten: 'Invalid payment bill',\n\t\t\t},\n\t\t\t11: {\n\t\t\t\tvn: 'Số tiền thanh toán không hợp lệ',\n\t\t\t\ten: 'Invalid amount',\n\t\t\t},\n\t\t\t12: {\n\t\t\t\tvn: 'Đơn vị tiền tệ không hợp lệ',\n\t\t\t\ten: 'Invalid money currency',\n\t\t\t},\n\t\t\t29: {\n\t\t\t\tvn: 'Token không tồn tại',\n\t\t\t\ten: 'Token not found',\n\t\t\t},\n\t\t\t80: {\n\t\t\t\tvn: 'Không thêm được đơn hàng',\n\t\t\t\ten: \"Can't add more order\",\n\t\t\t},\n\t\t\t81: {\n\t\t\t\tvn: 'Đơn hàng chưa được thanh toán',\n\t\t\t\ten: 'The order has not yet been paid',\n\t\t\t},\n\t\t\t110: {\n\t\t\t\tvn: 'Địa chỉ email tài khoản nhận tiền không phải email chính',\n\t\t\t\ten: 'The email address is not the primary email',\n\t\t\t},\n\t\t\t111: {\n\t\t\t\tvn: 'Tài khoản nhận tiền đang bị khóa',\n\t\t\t\ten: 'Receiver account is locked',\n\t\t\t},\n\t\t\t113: {\n\t\t\t\tvn: 'Tài khoản nhận tiền chưa cấu hình là người bán nội dung số',\n\t\t\t\ten: 'Receiver account is not configured as digital content sellers',\n\t\t\t},\n\t\t\t114: {\n\t\t\t\tvn: 'Giao dịch đang thực hiện, chưa kết thúc',\n\t\t\t\ten: 'Pending transaction',\n\t\t\t},\n\t\t\t115: {\n\t\t\t\tvn: 'Giao dịch bị hủy',\n\t\t\t\ten: 'Cancelled transaction',\n\t\t\t},\n\t\t\t118: {\n\t\t\t\tvn: 'tax_amount không hợp lệ',\n\t\t\t\ten: 'Invalid tax_amount',\n\t\t\t},\n\t\t\t119: {\n\t\t\t\tvn: 'discount_amount không hợp lệ',\n\t\t\t\ten: 'Invalid discount_amount',\n\t\t\t},\n\t\t\t120: {\n\t\t\t\tvn: 'fee_shipping không hợp lệ',\n\t\t\t\ten: 'Invalid fee_shipping',\n\t\t\t},\n\t\t\t121: {\n\t\t\t\tvn: 'return_url không hợp lệ',\n\t\t\t\ten: 'Invalid return_url',\n\t\t\t},\n\t\t\t122: {\n\t\t\t\tvn: 'cancel_url không hợp lệ',\n\t\t\t\ten: 'Invalid cancel_url',\n\t\t\t},\n\t\t\t123: {\n\t\t\t\tvn: 'items không hợp lệ',\n\t\t\t\ten: 'Invalid items',\n\t\t\t},\n\t\t\t124: {\n\t\t\t\tvn: 'transaction_info không hợp lệ',\n\t\t\t\ten: 'Invalid transaction_info',\n\t\t\t},\n\t\t\t125: {\n\t\t\t\tvn: 'quantity không hợp lệ',\n\t\t\t\ten: 'Invalid quantity',\n\t\t\t},\n\t\t\t126: {\n\t\t\t\tvn: 'order_description không hợp lệ',\n\t\t\t\ten: 'Invalid order_description',\n\t\t\t},\n\t\t\t127: {\n\t\t\t\tvn: 'affiliate_code không hợp lệ',\n\t\t\t\ten: 'Invalid affiliate_code',\n\t\t\t},\n\t\t\t128: {\n\t\t\t\tvn: 'time_limit không hợp lệ',\n\t\t\t\ten: 'Invalid time_limit',\n\t\t\t},\n\t\t\t129: {\n\t\t\t\tvn: 'buyer_fullname không hợp lệ',\n\t\t\t\ten: 'Invalid buyer_fullname',\n\t\t\t},\n\t\t\t130: {\n\t\t\t\tvn: 'buyer_email không hợp lệ',\n\t\t\t\ten: 'Invalid buyer_email',\n\t\t\t},\n\t\t\t131: {\n\t\t\t\tvn: 'buyer_mobile không hợp lệ',\n\t\t\t\ten: 'Invalid buyer_mobile',\n\t\t\t},\n\t\t\t132: {\n\t\t\t\tvn: 'buyer_address không hợp lệ',\n\t\t\t\ten: 'Invalid buyer_address',\n\t\t\t},\n\t\t\t133: {\n\t\t\t\tvn: 'total_item không hợp lệ',\n\t\t\t\ten: 'Invalid total_item',\n\t\t\t},\n\t\t\t134: {\n\t\t\t\tvn: 'payment_method, bank_code không hợp lệ',\n\t\t\t\ten: 'Invalid payment_method, bank_code',\n\t\t\t},\n\t\t\t135: {\n\t\t\t\tvn: 'Lỗi kết nối tới hệ thống ngân hàng',\n\t\t\t\ten: 'Error connecting to banking system',\n\t\t\t},\n\t\t\t140: {\n\t\t\t\tvn: 'Đơn hàng không hỗ trợ thanh toán trả góp',\n\t\t\t\ten: 'The order does not support installment payments',\n\t\t\t},\n\t\t\t99: {\n\t\t\t\tvn: 'Lỗi không được định nghĩa hoặc không rõ nguyên nhân',\n\t\t\t\ten: 'Unknown error',\n\t\t\t},\n\t\t\tdefault: {\n\t\t\t\tvn: 'Giao dịch thất bại',\n\t\t\t\ten: 'Failured',\n\t\t\t},\n\t\t};\n\n\t\tconst respondText = responseCodeTable[responseCode];\n\n\t\treturn respondText ? respondText[locale] : responseCodeTable.default[locale];\n\t}\n}\n\n/**\n * @typedef {Object} NganLuongCheckoutPayload\n * @property {string} createdDate  optional: true\n * @property {number} amount The payment mount\n * @property {string} clientIp  optional: true, max: 16\n * @property {string} currency  allowedValues: ['vnd', 'VND', 'USD', 'usd']\n * @property {string} billingCity  optional: true, max: 255\n * @property {string} billingCountry  optional: true, max: 255\n * @property {string} billingPostCode  optional: true, max: 255\n * @property {string} billingStateProvince  optional: true, max: 255\n * @property {string} billingStreet  optional: true, max: 255\n * @property {string} customerId  optional: true, max: 255\n * @property {string} deliveryAddress  optional: true, max: 255\n * @property {string} deliveryCity  optional: true, max: 255\n * @property {string} deliveryCountry  optional: true, max: 255\n * @property {string} deliveryProvince  optional: true, max: 255\n * @property {string} locale  allowedValues: ['vi', 'en']\n * @property {string} orderId  max: 34\n * @property {string} receiverEmail  max: 255, regEx: SimpleSchema.RegEx.Email\n * @property {string} paymentMethod  allowedValues: ['NL', 'VISA', 'MASTER', 'JCB', 'ATM_ONLINE', 'ATM_OFFLINE', 'NH_OFFLINE', 'TTVP', 'CREDIT_CARD_PREPAID', 'IB_ONLINE']\n * @property {string} bankCode  optional: true, max: 50 (required with method ATM_ONLINE, ATM_OFFLINE, NH_OFFLINE, CREDIT_CARD_PREPAID)\n * @property {string} paymentType  optional: true, allowedValues: ['1', '2']\n * @property {string} orderInfo  optional: true, max: 500\n * @property {number} taxAmount Integer, optional: true\n * @property {number} discountAmount Integer, optional: true\n * @property {number} feeShipping Integer, optional: true\n * @property {string} customerEmail  max: 255, regEx: SimpleSchema.RegEx.Email\n * @property {string} customerPhone  max: 255\n * @property {string} customerName  max: 255\n * @property {string} returnUrl  max: 255\n * @property {string} cancelUrl  max: 255, optional: true\n * @property {number} timeLimit Integer, optional: true; minu\n * @property {string} affiliateCode  max: 255, optional: true\n * @property {string} totalItem  optional: true\n * @property {string} transactionId  max: 40\n * @property {string} nganluongSecretKey  max: 32\n * @property {string} nganluongMerchant  max: 16\n * @property {string} nganluongCommand  max: 32\n * @property {string} nganluongVersion  max: 3\n * @property {string} paymentGateway  regEx: SimpleSchema.RegEx.Url\n * @property {string} merchant\n * @property {string} receiverEmail\n * @property {string} secureSecret\n */\n/* prettier-ignore */\n/**\n * The schema is based on field data requirements from NganLuong's dev document\n * <br>\n * _Cấu trúc dữ liệu được dựa trên các yêu cầu của tài liệu Ngân Lượng_\n * @type {SimpleSchema}\n */\nNganLuong.checkoutSchema = new SimpleSchema({\n\tcreatedDate \t\t : { type: String, optional: true },\n\tamount               : { type: SimpleSchema.Integer },\n\tclientIp             : { type: String, optional: true, max: 16 },\n\tcurrency             : { type: String, allowedValues: ['vnd', 'VND', 'USD', 'usd'] },\n\tbillingCity          : { type: String, optional: true, max: 255 }, // NOTE: no max limit documented for optional fields, this is just a safe value\n\tbillingCountry       : { type: String, optional: true, max: 255 },\n\tbillingPostCode      : { type: String, optional: true, max: 255 },\n\tbillingStateProvince : { type: String, optional: true, max: 255 },\n\tbillingStreet        : { type: String, optional: true, max: 255 },\n\tcustomerId           : { type: String, optional: true, max: 255 },\n\tdeliveryAddress      : { type: String, optional: true, max: 255 },\n\tdeliveryCity         : { type: String, optional: true, max: 255 },\n\tdeliveryCountry      : { type: String, optional: true, max: 255 },\n\tdeliveryProvince     : { type: String, optional: true, max: 255 },\n\tlocale               : { type: String, allowedValues: ['vi', 'en'] },\n\torderId              : { type: String, max: 34 },\n\treceiverEmail        : { type: String, max: 255, regEx: SimpleSchema.RegEx.Email },\n\tpaymentMethod        : { type: String, allowedValues: ['NL', 'VISA', 'MASTER', 'JCB', 'ATM_ONLINE', 'ATM_OFFLINE', 'NH_OFFLINE', 'TTVP', 'CREDIT_CARD_PREPAID', 'IB_ONLINE'] },\n\tbankCode             : {\n\t\ttype: String,\n\t\toptional: true,\n\t\tmax: 50,\n\t\tcustom() {\n\t\t\tlet shouldBeRequired = false;\n\t\t\tconst method = this.field('paymentMethod').value;\n\t\t\tif (['ATM_ONLINE', 'ATM_OFFLINE', 'NH_OFFLINE', 'CREDIT_CARD_PREPAID'].indexOf(method) > -1) {\n\t\t\t\tshouldBeRequired = true;\n\t\t\t}\n\n\t\t\tif (shouldBeRequired && (this.value == null || this.value === '')) {\n\t\t\t\treturn SimpleSchema.ErrorTypes.REQUIRED;\n\t\t\t}\n\n\t\t\t// field is valid\n\t\t\treturn undefined;\n\t\t},\n\t},\n\tpaymentType          : { type: String, optional: true, allowedValues: ['1', '2'] },\n\torderInfo            : { type: String, optional: true, max: 500 },\n\ttaxAmount            : { type: SimpleSchema.Integer, optional: true },\n\tdiscountAmount       : { type: SimpleSchema.Integer, optional: true },\n\tfeeShipping          : { type: SimpleSchema.Integer, optional: true },\n\tcustomerEmail        : { type: String, max: 255, regEx: SimpleSchema.RegEx.Email },\n\tcustomerPhone        : { type: String, max: 255 },\n\tcustomerName         : { type: String, max: 255 },\n\treturnUrl            : { type: String, max: 255 },\n\tcancelUrl            : { type: String, max: 255, optional: true },\n\ttimeLimit            : { type: SimpleSchema.Integer, optional: true }, // minutes\n\taffiliateCode        : { type: String, max: 255, optional: true },\n\ttotalItem            : { type: String, optional: true },\n\ttransactionId        : { type: String, max: 40 },\n\tnganluongSecretKey   : { type: String, max: 32 },\n\tnganluongMerchant    : { type: String, max: 16 },\n\tnganluongCommand     : { type: String, max: 32 },\n\tnganluongVersion     : { type: String, max: 3 },\n});\n\nNganLuong.configSchema = new SimpleSchema({\n\tpaymentGateway: { type: String, regEx: SimpleSchema.RegEx.Url },\n\tmerchant: { type: String },\n\treceiverEmail: { type: String },\n\tsecureSecret: { type: String },\n});\n// should not be changed\nNganLuong.VERSION = '3.1';\nNganLuong.COMMAND = 'SetExpressCheckout';\n// nganluong only support VND\nNganLuong.CURRENCY_VND = 'vnd';\nNganLuong.LOCALE_EN = 'en';\nNganLuong.LOCALE_VN = 'vi';\n\n/**\n * NganLuong test configs\n * <br>\n * _Cấu hình dùng thử Ngân Lượng_\n */\nNganLuong.TEST_CONFIG = {\n\tpaymentGateway: 'https://sandbox.nganluong.vn:8088/nl35/checkout.api.nganluong.post.php',\n\tmerchant: '45571',\n\treceiverEmail: 'tung.tran@naustud.io',\n\tsecureSecret: 'c57700e78cb0df1766279d91e3233c79',\n};\n\nexport { NganLuong };\n"]}